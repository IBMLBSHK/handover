---
- name: Gather LOG files (This is nmon log as example)
  hosts: aix
  gather_facts: yes
  vars_files:
    - "./vars/nmon_path.yaml"
  vars:
    cur_time: "{{ ansible_date_time.iso8601_basic_short }}"
  tasks:
  - name: Set log vars
    set_fact:
      action: gather_nmon
      items: ""
    run_once: true
  
  - name: PreCheck current user is ansiadm
    include_tasks: tasks/fail_when_not_ansiadm.yaml

  - name: Start to gather the nmon files ... 
    block:
    - include_tasks: tasks/log_begin.yaml
    
    - name: Checking the directory exists
      stat:
        path: "{{ nmon_path.dest }}"
      register: dir_stat
      delegate_to: 127.0.0.1

    - name: Create a directory if doesn't exist
      file:
        path: "{{ nmon_path.dest }}"
        state: directory
        owner: ansiadm
        group: ansiadm
        mode: 0755
      when: not dir_stat.stat.exists
      delegate_to: 127.0.0.1

    - name: Change the permission of directory
      file:
        path: "{{ nmon_path.dest }}"
        mode: 0755
      delegate_to: 127.0.0.1

    - name: Get the file names of nmon
      find:
        paths: "{{ nmon_path.src }}"
        patterns: '*.nmon'
      #  use_regex: yes
      register: file_2_fetch

    - name: Copy file from remote to local
      fetch:
        src: "{{ item.path }}"
        dest: "{{ nmon_path.dest}}"
        flat: yes
        validate_checksum: yes
      register: fetch_result
      loop: "{{ file_2_fetch.files }}"

    - debug:
        var: fetch_result

    - name: Write Log to vars_{{ change_order }}/{{ action }}.<<hostname>>.{{ cur_time }}.log
      lineinfile:
        line: |
          {% for item in fetch_result.results %}
          {% if item.changed %}
            {{ inventory_hostname }}: {{ item.item.path}} -> {{ item.dest }} ... Copied:{{ item.changed }}
          {% else %}
            {{ inventory_hostname }}: {{ item.item.path}} -> {{ item.dest }} ... File already exists and do not copy again.
          {% endif %}
          {% endfor %}
        path: ./vars_{{ change_order }}/{{ action }}.{{ inventory_hostname }}.{{ cur_time }}.log
        owner: ansiadm
        group: ansiadm
        create: yes
      delegate_to: 127.0.0.1

        #- name: Write to log with yaml format
        #copy:
        #content: "{{  fetch_result.results | to_nice_yaml }}"
        #dest: ./vars_{{ change_order }}/{{ action }}.{{ cur_time }}.log
        #owner: ansiadm
        #group: ansiadm
        #delegate_to: 127.0.0.1
        
    - include_tasks: tasks/log_success.yaml

    rescue:
    - include_tasks: tasks/log_error.yaml

    always:
    - include_tasks: tasks/log_end.yaml
