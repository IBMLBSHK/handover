---
- name: NIM management
  hosts: nimserver
  gather_facts: yes
  vars_files:
    - "./vars/nim_master.yaml"
    - "./vars_{{ change_order }}/lpp_list.yaml"
  tasks:
  - name: Set log vars
    set_fact:
      action: nim_lpp_delete
      items: ""
    run_once: true

  - name: PreCheck current user is ansiadm
    include_tasks: tasks/fail_when_not_ansiadm.yaml

  - name: Start to delete lpp ...
    block:
    - include_tasks: tasks/log_begin.yaml
  
    - name: Make a list of lpp images in nim server
      include_tasks: tasks/list_lpp.yaml
      
    - name: Check the list lpp resource exist
      fail:
        msg: "There is no lpp resource in NIM server"
      when: lpp|length == 0
  
    - pause:
        prompt: |-
          Delete lpp options:
          =====================================
          {% for i in lpp %}
          {{ i.option }} - {{ i.name }}
          {% endfor %}
        echo: yes
      register: result 
      #when: inventory_hostname == nim_master.name
      #delegate_to: localhost
  
    - set_fact:
        lpp_option: "{{ result.user_input }}"
  
    - name: display input
      debug:
        msg: "{{ lpp_option|int - 1 }}"
      delegate_to: 127.0.0.1
  
    - name: Invalid option to delete lpp resource
      fail:
        msg: "Do not delete lpp image since option invalid (not in menu range)"
      when: lpp_option|int > lpp|length or lpp_option|int == 0
      delegate_to: 127.0.0.1
  
    - pause:
        prompt: |-
          Do you want to delete {{ lpp[lpp_option|int - 1].name }} (yes/no)?
        echo: yes
      failed_when: not boolen_lpp.user_input | bool  
      register: boolen_lpp
    
    - name: Start to delete the lpp 
      ibm.power_aix.nim_resource:
        action: delete
        object_type: lpp_source
        name: "{{ lpp[lpp_option|int - 1].name }}"
      when: boolen_lpp.user_input | bool and lpp_option|int -1 <  lpp|length
  
    - name: Start to delete the lpp directory
      file:
        path: '/export/nim/lpp/{{ lpp[lpp_option|int - 1].name }}'
        state: absent
      when: boolen_lpp.user_input | bool and lpp_option|int -1 <  lpp|length
    
    - include_tasks: tasks/log_success.yaml
   
    rescue:
    - include_tasks: tasks/log_error.yaml
    
    always:
    - include_tasks: tasks/log_end.yaml